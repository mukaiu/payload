@import '../../../../scss/styles.scss';

.checkbox {
  position: relative;
  margin-bottom: $baseline;

  .tooltip:not([aria-hidden="true"]) {
    right: auto;
    position: relative;
    margin-bottom: .2em;
    max-width: fit-content;
  }

  &__error-wrap {
    position: relative;
  }
}


.custom-checkbox {
  display: inline-flex;
  
  label {
    padding-bottom: 0;
    padding-left: base(.5);
  }

  &__input {
    @include formInput;
    display: flex;
    padding: 0;
    line-height: 0;
    position: relative;
    width: $baseline;
    height: $baseline;

    & input[type="checkbox"] {
      position: absolute;
      // Without the extra 4px, there is an uncheckable area due to the border of the parent element
      width: calc(100% + 4px);
      height: calc(100% + 4px);
      padding: 0;
      margin: 0;
      margin-left: -2px;
      margin-top: -2px;
      opacity: 0;
      border-radius: 0;
      z-index: 1;
      cursor: pointer;
    }
  }

  &__icon {
    position: absolute;

    svg {
      opacity: 0;
    }
  }
  
 
  &:not(&--read-only) {
    &:active,
    &:focus-within,
    &:focus {
      .custom-checkbox__input, & input[type="checkbox"] {
        @include inputShadowActive;

        outline: 0;
        box-shadow: 0 0 3px 3px var(--theme-success-400)!important;
        border: 1px solid var(--theme-elevation-150);
      }
    }

    &:hover {
      .custom-checkbox__input, & input[type="checkbox"] {
        border-color: var(--theme-elevation-250);
      }
    }
  }
  
  &:not(&--read-only):not(&--checked) {
    &:hover {
      cursor: pointer;

      svg {
        opacity: 0.2;
      }
    }
  }

  &--checked {
    .custom-checkbox__icon {
      svg {
        opacity: 1;
      }
    }
  }

  &--read-only {
    .custom-checkbox__input {
      background-color: var(--theme-elevation-100);
    }

    label {
      color: var(--theme-elevation-400);
    }
  }
}

html[data-theme=light] {
  .checkbox {
    &.error {
       .custom-checkbox__input {
        @include lightInputError;
      }
    }
  }
}

html[data-theme=dark] {
  .checkbox {
    &.error {
      .custom-checkbox__input {
        @include darkInputError;
      }
    }
  }
}
